{"orgName":"kauri","version":"0.1.0","packageName":"kauri/service:0.1.0","packageId":"service","initFunctionName":"kauri/service:0.1.0.\u003cinit\u003e","startFunctionName":"kauri/service:0.1.0.\u003cstart\u003e","stopFunctionName":"kauri/service:0.1.0.\u003cstop\u003e","testInitFunctionName":"kauri/service:0.1.0.\u003ctestinit\u003e","testStartFunctionName":"kauri/service:0.1.0.\u003cteststart\u003e","testStopFunctionName":"kauri/service:0.1.0.\u003cteststop\u003e","sourceRootPath":"C:\\Users\\kauri\\Desktop\\Ballerina\\cali","testUtilityFunctions":{"beforeFunc":"kauri.service.tests.main_test","response..\u003cinit\u003e":"kauri.service.cali_sample_service","main":"kauri.service.main","$annot_func$140":"kauri.service.tests.main_test","update..\u003cinit\u003e":"kauri.service.cali_sample_service","versionAndKey..\u003cinit\u003e":"kauri.service.cali_sample_service","searchRecord..\u003cinit\u003e":"kauri.service.cali_sample_service","$annot_func$75":"kauri.service.cali_sample_service","Record..\u003cinit\u003e":"kauri.service.cali_sample_service","readRecordWithKeyVer..\u003cinit\u003e":"kauri.service.cali_sample_service","updateRecord":"kauri.service.cali_sample_service","testFunction":"kauri.service.tests.main_test","readRecordWithCriterion":"kauri.service.cali_sample_service","Song..\u003cinit\u003e":"kauri.service.cali_sample_service","beforeSuiteFunc":"kauri.service.tests.main_test","addRecord":"kauri.service.cali_sample_service","getDescriptorMap":"kauri.service.cali_sample_service","readWithKey":"kauri.service.cali_sample_service","Artist..\u003cinit\u003e":"kauri.service.cali_sample_service","$annot_func$139":"kauri.service.tests.main_test","$annot_func$138":"kauri.service.tests.main_test","afterSuiteFunc":"kauri.service.tests.main_test","cali$$service$0.$__init$":"kauri.service.cali_sample_service","readRecordWithKey..\u003cinit\u003e":"kauri.service.cali_sample_service","afterFunc":"kauri.service.tests.main_test","readWithKeyAndVersion":"kauri.service.cali_sample_service"},"beforeSuiteFunctionNames":["beforeSuiteFunc"],"afterSuiteFunctionNames":["afterSuiteFunc"],"beforeEachFunctionNames":[],"afterEachFunctionNames":[],"tests":[{"testName":"testFunction","beforeTestFunction":"beforeFunc","afterTestFunction":"afterFunc","dependsOnTestFunctions":[],"groups":[]}],"isReportRequired":false,"mockFunctionNamesMap":{}}